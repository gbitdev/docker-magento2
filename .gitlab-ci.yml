# This file is a template, and might need editing before it works on your project.
variables:
  IMAGE_TAG: "eval $(date +'%Y%m%d')"
  # IMAGE_TAG: $CI_COMMIT_REF_NAME

docker-build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$IMAGE_TAG || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$IMAGE_TAG --tag $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

docker-test:
  # Official docker image.
  image: docker/compose:latest
  stage: test
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - wget https://github.com/mikefarah/yq/releases/download/3.2.0/yq_linux_amd64 -O /bin/yq && chmod +x /bin/yq
  script:
    - yq delete docker-compose.yml 'services.*.volumes' | yq delete - 'services.varnish' | yq delete - 'services.redis' | yq delete - 'services.magento.depends_on[1]' | yq delete - 'volumes' > docker-compose.ci.yml
    - sed -i "s/magento2:latest/magento2:$IMAGE_TAG/" docker-compose.ci.yml
    - echo "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - docker-compose -f docker-compose.ci.yml up --no-build --quiet-pull -d
    - docker-compose logs -f magento mariadb | while read LOGLINE; do echo "${LOGLINE}"; echo "${LOGLINE}" | grep -q "Starting magento" && pkill -P $$ docker-compose && echo Magento Healthy && exit 0; done
    - docker tag "$CI_REGISTRY_IMAGE:$IMAGE_TAG" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master
